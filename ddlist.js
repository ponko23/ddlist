// Generated by CoffeeScript 1.6.3
$(function() {
  var AbstractState, DragMovingState, NormalState, TextEditingState, listNode, selected, state, transitState;
  state = null;
  selected = null;
  /*
    EventHandlerの振り分け
  */

  listNode = $('#list');
  listNode.on('mousedown', 'li', function(event) {
    return state.onMouseDown(event);
  });
  listNode.on('mousemove', 'li', function(event) {
    return state.onMouseMove(event);
  });
  listNode.on('mouseup', 'li', function(event) {
    return state.onMouseUp(event);
  });
  listNode.on('dblclick', 'li', function(event) {
    return state.onDoubleClick(event);
  });
  $(document).on('keydown', function(event) {
    return state.onKeyDown(event);
  });
  $('body').not('.text-editing').on('click', function() {
    return state.onOtherClick();
  });
  /*
    State移行処理
  */

  transitState = function(nextState) {
    $('#debug').text(state + ' -> ' + nextState);
    return state = nextState;
  };
  /*
    Stateの基底クラス
  */

  AbstractState = function() {};
  AbstractState.prototype = {
    initialize: function() {},
    onMouseDown: function(event) {},
    onMouseMove: function(event) {},
    onMouseUp: function(event) {},
    onDubleClick: function(event) {},
    onKeyDown: function(event) {},
    onOtherClick: function() {},
    toString: function() {
      return 'AbstractState';
    }
  };
  /*
    待機中State
  */

  NormalState = function() {
    return selected = null;
  };
  $.extend(NormalState.prototype, AbstractState.prototype, {
    onMouseDown: function(event) {
      var target;
      target = event.target;
      if (target.tagName === 'LI') {
        return transitState(new DragMovingState(target));
      }
    },
    onDoubleClick: function(event) {
      var target;
      target = event.target;
      if (target.tagName === 'LI') {
        return transitState(new TextEditingState(target));
      }
    },
    toString: function() {
      return 'NormalState';
    }
  });
  /*
    List項目移動中State
  */

  DragMovingState = function(target) {
    selected = target;
    $('#drag-item').text($(selected).text()).show();
  };
  $.extend(DragMovingState.prototype, AbstractState.prototype, {
    onMouseMove: function(event) {
      var target;
      target = event.target;
      if (target.tagName === 'LI') {
        $('#drag-item').css({
          left: event.pageX + 2,
          top: event.pageY + 2
        });
        $('#list li').removeClass('drag-over');
        return $(target).addClass('drag-over');
      }
    },
    onMouseUp: function(event) {
      var target;
      target = event.target;
      $('#list li').removeClass('drag-over');
      if (target !== selected) {
        $(target).after(selected);
      }
      $('#drag-item').hide();
      return transitState(new NormalState());
    },
    toString: function() {
      return 'DragMovingState';
    }
  });
  /*
    textbox編集中State
  */

  TextEditingState = function(target) {
    var pos;
    selected = target;
    pos = $(selected).position();
    this.input = $('<input type="text" class="text-editing">').css({
      left: pos.left,
      top: pos.top
    }).val($(selected).text()).appendTo('body').focus();
    $(selected).html('&nbsp;');
  };
  $.extend(TextEditingState.prototype, AbstractState.prototype, {
    onKeyDown: function(event) {
      if (event.which === 13) {
        $(selected).text(this.input.val());
        this.input.remove();
        return transitState(new NormalState());
      }
    },
    onOtherClick: function() {
      $(selected).text(this.input.val());
      this.input.remove();
      return transitState(new NormalState());
    },
    toString: function() {
      return 'TextEditingState';
    }
  });
  return transitState(new NormalState());
});
